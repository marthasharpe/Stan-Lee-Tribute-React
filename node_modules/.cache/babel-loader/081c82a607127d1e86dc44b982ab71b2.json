{"ast":null,"code":"var _jsxFileName = \"/Users/marthasharpe/Desktop/Code Projects/Stan-Lee-React/src/QuoteBox.js\";\nimport React from 'react';\nimport Quotes from './Quotes';\nimport Buttons from './Buttons';\nimport quotesData from './quotesData';\nconst possibleQuotes = quotesData;\n\nclass QuoteBox extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      visibleQuote: possibleQuotes[Math.floor(Math.random() * possibleQuotes.length)]\n    };\n\n    this.previousQuote = () => {\n      let quoteIndex = possibleQuotes.indexOf(this.state.visibleQuote);\n      let finalQuote = possibleQuotes[possibleQuotes.length - 1];\n      this.setState({\n        visibleQuote: quoteIndex === 0 ? finalQuote : possibleQuotes[quoteIndex - 1]\n      });\n    };\n\n    this.nextQuote = () => {\n      let quoteIndex = possibleQuotes.indexOf(this.state.visibleQuote);\n      this.setState({\n        visibleQuote: quoteIndex === possibleQuotes.length - 1 ? possibleQuotes[0] : possibleQuotes[quoteIndex + 1]\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"quote-box\",\n      id: \"quote-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Quotes, {\n      visibleQuote: this.state.visibleQuote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(Buttons, {\n      previousQuote: this.previousQuote,\n      nextQuote: this.nextQuote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default QuoteBox;","map":{"version":3,"sources":["/Users/marthasharpe/Desktop/Code Projects/Stan-Lee-React/src/QuoteBox.js"],"names":["React","Quotes","Buttons","quotesData","possibleQuotes","QuoteBox","Component","state","visibleQuote","Math","floor","random","length","previousQuote","quoteIndex","indexOf","finalQuote","setState","nextQuote","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,MAAMC,cAAc,GAAGD,UAAvB;;AAEA,MAAME,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,YAAY,EAAEJ,cAAc,CAACK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,cAAc,CAACQ,MAA1C,CAAD;AADxB,KAD2B;;AAAA,SAKnCC,aALmC,GAKnB,MAAM;AAClB,UAAIC,UAAU,GAAGV,cAAc,CAACW,OAAf,CAAuB,KAAKR,KAAL,CAAWC,YAAlC,CAAjB;AACA,UAAIQ,UAAU,GAAGZ,cAAc,CAACA,cAAc,CAACQ,MAAf,GAAwB,CAAzB,CAA/B;AACA,WAAKK,QAAL,CAAc;AACVT,QAAAA,YAAY,EAAEM,UAAU,KAAK,CAAf,GAAmBE,UAAnB,GAAgCZ,cAAc,CAACU,UAAU,GAAG,CAAd;AADlD,OAAd;AAGH,KAXkC;;AAAA,SAYnCI,SAZmC,GAYvB,MAAM;AACd,UAAIJ,UAAU,GAAGV,cAAc,CAACW,OAAf,CAAuB,KAAKR,KAAL,CAAWC,YAAlC,CAAjB;AACA,WAAKS,QAAL,CAAc;AACVT,QAAAA,YAAY,EAAEM,UAAU,KAAKV,cAAc,CAACQ,MAAf,GAAwB,CAAvC,GAA2CR,cAAc,CAAC,CAAD,CAAzD,GAA+DA,cAAc,CAACU,UAAU,GAAG,CAAd;AADjF,OAAd;AAGH,KAjBkC;AAAA;;AAkBnCK,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,EAAE,EAAC,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,YAAY,EAAE,KAAKZ,KAAL,CAAWC,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,OAAD;AAAS,MAAA,aAAa,EAAE,KAAKK,aAA7B;AAA4C,MAAA,SAAS,EAAE,KAAKK,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAzBkC;;AA4BvC,eAAeb,QAAf","sourcesContent":["import React from 'react';\nimport Quotes from './Quotes';\nimport Buttons from './Buttons';\nimport quotesData from './quotesData';\n\nconst possibleQuotes = quotesData;\n\nclass QuoteBox extends React.Component {\n    state = {\n        visibleQuote: possibleQuotes[Math.floor(Math.random() * possibleQuotes.length)]\n    }\n\n    previousQuote = () => {\n        let quoteIndex = possibleQuotes.indexOf(this.state.visibleQuote);\n        let finalQuote = possibleQuotes[possibleQuotes.length - 1];\n        this.setState({\n            visibleQuote: quoteIndex === 0 ? finalQuote : possibleQuotes[quoteIndex - 1]\n        });\n    }\n    nextQuote = () => {\n        let quoteIndex = possibleQuotes.indexOf(this.state.visibleQuote);\n        this.setState({\n            visibleQuote: quoteIndex === possibleQuotes.length - 1 ? possibleQuotes[0] : possibleQuotes[quoteIndex + 1]\n        })\n    }\n    render() {\n        return(\n            <div className=\"quote-box\" id=\"quote-box\">\n                <Quotes visibleQuote={this.state.visibleQuote}/>\n                <Buttons previousQuote={this.previousQuote} nextQuote={this.nextQuote}/>\n            </div>\n        )\n    }\n}\n\nexport default QuoteBox;"]},"metadata":{},"sourceType":"module"}