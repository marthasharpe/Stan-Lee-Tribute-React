{"ast":null,"code":"var _jsxFileName = \"/Users/marthasharpe/Desktop/Code Projects/Stan-Lee-React/src/QuoteBox.js\";\nimport React from 'react';\nimport Quotes from './Quotes';\nimport Buttons from './Buttons';\nimport { quotesJSON } from './quotesData.js';\n\nclass QuoteBox extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      visibleQuote: possibleQuotes[Math.floor(Math.random() * possibleQuotes.length)]\n    };\n\n    this.lastQuote = () => {\n      let quoteIndex = possibleQuotes.indexOf(this.state.visibleQuote);\n      let finalQuote = possibleQuotes[possibleQuotes.length - 1];\n      this.setState({\n        visibleQuote: quoteIndex === 0 ? finalQuote : possibleQuotes[quoteIndex -= 1]\n      });\n      console.log(quoteIndex);\n    };\n\n    this.nextQuote = () => {\n      let quoteIndex = possibleQuotes.indexOf(this.state.visibleQuote);\n      this.setState({\n        visibleQuote: quoteIndex === possibleQuotes.length ? possibleQuotes[0] : possibleQuotes[quoteIndex += 1]\n      });\n      console.log(quoteIndex);\n    };\n  }\n\n  render() {\n    console.log(quotesJSON);\n    return React.createElement(\"div\", {\n      className: \"quote-box\",\n      id: \"quote-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Quotes, {\n      visibleQuote: this.state.visibleQuote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Buttons, {\n      lastQuote: this.lastQuote,\n      nextQuote: this.nextQuote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default QuoteBox;","map":{"version":3,"sources":["/Users/marthasharpe/Desktop/Code Projects/Stan-Lee-React/src/QuoteBox.js"],"names":["React","Quotes","Buttons","quotesJSON","QuoteBox","Component","state","visibleQuote","possibleQuotes","Math","floor","random","length","lastQuote","quoteIndex","indexOf","finalQuote","setState","console","log","nextQuote","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,QAA2B,iBAA3B;;AAEA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,YAAY,EAAEC,cAAc,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,cAAc,CAACI,MAA1C,CAAD;AADxB,KAD2B;;AAAA,SAKnCC,SALmC,GAKvB,MAAM;AACd,UAAIC,UAAU,GAAGN,cAAc,CAACO,OAAf,CAAuB,KAAKT,KAAL,CAAWC,YAAlC,CAAjB;AACA,UAAIS,UAAU,GAAGR,cAAc,CAACA,cAAc,CAACI,MAAf,GAAwB,CAAzB,CAA/B;AACA,WAAKK,QAAL,CACI;AACAV,QAAAA,YAAY,EAAEO,UAAU,KAAK,CAAf,GAAmBE,UAAnB,GAAgCR,cAAc,CAACM,UAAU,IAAI,CAAf;AAD5D,OADJ;AAIAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AACH,KAbkC;;AAAA,SAcnCM,SAdmC,GAcvB,MAAM;AACd,UAAIN,UAAU,GAAGN,cAAc,CAACO,OAAf,CAAuB,KAAKT,KAAL,CAAWC,YAAlC,CAAjB;AACA,WAAKU,QAAL,CAAc;AACVV,QAAAA,YAAY,EAAEO,UAAU,KAAKN,cAAc,CAACI,MAA9B,GAAuCJ,cAAc,CAAC,CAAD,CAArD,GAA2DA,cAAc,CAACM,UAAU,IAAI,CAAf;AAD7E,OAAd;AAGAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AACH,KApBkC;AAAA;;AAqBnCO,EAAAA,MAAM,GAAG;AACLH,IAAAA,OAAO,CAACC,GAAR,CAAYhB,UAAZ;AACA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,EAAE,EAAC,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,YAAY,EAAE,KAAKG,KAAL,CAAWC,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAE,KAAKM,SAAzB;AAAoC,MAAA,SAAS,EAAE,KAAKO,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AA7BkC;;AAgCvC,eAAehB,QAAf","sourcesContent":["import React from 'react';\nimport Quotes from './Quotes';\nimport Buttons from './Buttons';\nimport { quotesJSON } from './quotesData.js';\n\nclass QuoteBox extends React.Component {\n    state = {\n        visibleQuote: possibleQuotes[Math.floor(Math.random() * possibleQuotes.length)]\n    }\n\n    lastQuote = () => {\n        let quoteIndex = possibleQuotes.indexOf(this.state.visibleQuote);\n        let finalQuote = possibleQuotes[possibleQuotes.length - 1];\n        this.setState(\n            {\n            visibleQuote: quoteIndex === 0 ? finalQuote : possibleQuotes[quoteIndex -= 1]\n        })\n        console.log(quoteIndex)\n    }\n    nextQuote = () => {\n        let quoteIndex = possibleQuotes.indexOf(this.state.visibleQuote);\n        this.setState({\n            visibleQuote: quoteIndex === possibleQuotes.length ? possibleQuotes[0] : possibleQuotes[quoteIndex += 1]\n        })\n        console.log(quoteIndex);\n    }\n    render() {\n        console.log(quotesJSON)\n        return(\n            <div className=\"quote-box\" id=\"quote-box\">\n                <Quotes visibleQuote={this.state.visibleQuote}/>\n                <Buttons lastQuote={this.lastQuote} nextQuote={this.nextQuote}/>\n            </div>\n        )\n    }\n}\n\nexport default QuoteBox;"]},"metadata":{},"sourceType":"module"}